worker_processes 4;
pid /var/log/nginx/nginx.pid;

events {
  worker_connections 768;
}

http {

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  #limit_req_zone $binary_remote_addr zone=default:10m rate=50r/m;

  #include /etc/nginx/naxsi_core.rules;

  gzip on;
  gzip_http_version 1.0;
  gzip_disable "msie6";
  gzip_min_length 512;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types application/xml application/x-javascript application/javascript text/css image/svg+xml;

  include /etc/nginx/conf.d/*.conf;
  #include /etc/nginx/sites-enabled/*;

  upstream wiki {
    server 127.0.0.1:3000;
  }

  upstream jothon {
    server 127.0.0.1:9000;
  }

  server {
    listen 443;
    include /etc/nginx/mime.types;
    server_name g0v.wiki;
    error_page 405 = $uri;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/g0v.wiki/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/keys/0000_key-certbot.pem;

    location ~ ^/(.*)$ {
      root /home/web/workspace/g0v.wiki/static/;
      try_files /$1 /$1/index.html @apiserver;
    }

    location @apiserver {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cookie_domain localhost $host;
      proxy_pass http://wiki;
      proxy_redirect off;
      #limit_req zone=api burst=7 nodelay;
    }
  }

  server {
    listen 80;
    server_name g0v.wiki;
    add_header Strict-Transport-Security "max-age=16070400; includeSubDomains";
    location / {
      if ($http_user_agent !~* (facebook) ) {
          return 301 https://$server_name$request_uri;
      }
      root /home/web/workspace/g0v.wiki/assets/;
    }
    #rewrite     ^   https://$server_name$request_uri? permanent;
  }

  server {
    listen 443;
    include /etc/nginx/mime.types;
    server_name g0v.d3b.info;
    error_page 405 = $uri;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/jothon/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/keys/0000_key-certbot.pem;

    location ~ ^/s/avatar/(.*)$ {
      root /home/web/workspace/jothon-net/;
      try_files /static/s/avatar/$1 /static/assets/img/avatar.svg 403;
    }

    location = /robots.txt {
      return 404;
    }

    location = /js/global.js {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_pass http://jothon;
      proxy_redirect off;
      proxy_intercept_errors on;
      error_page 404 500 502 503 504 =200 @globalfallback;
    }

    location @globalfallback {
      root /home/web/workspace/jothon-net/static/;
      try_files $uri $uri/;
    }

    location ~ \.(?:ico|css|js|gif|jpe?g|png|svg|woff)$ {
      root /home/web/workspace/jothon-net/static/;
      #expires 30d;
      #add_header Pragma public;
      #add_header Cache-Control public;
    }

    rewrite ^(/g0v-hackath[0-9]+n)$ http://hackfoldr.org/$1;

    location ~ ^/(.*)$ {
      root /home/web/workspace/jothon-net/;
      try_files /static/$1 /static/$1/index.html @apiserver;
    }

    location @apiserver {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cookie_domain localhost $host;
      proxy_pass http://jothon;
      proxy_redirect off;
      #limit_req zone=api burst=7 nodelay;
    }
  }

  server {
    listen 80;
    server_name g0v.d3b.info;
    add_header Strict-Transport-Security "max-age=16070400; includeSubDomains";
    location / {
      if ($http_user_agent !~* (facebook) ) {
          return 301 https://$server_name$request_uri;
      }
      root /home/web/workspace/jothon-net/static/;
    }
    #rewrite     ^   https://$server_name$request_uri? permanent;
  }
}
